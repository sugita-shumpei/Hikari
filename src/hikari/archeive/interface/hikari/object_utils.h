#ifndef HK_OBJECT_UTILS__H
#define HK_OBJECT_UTILS__H

#if !defined(HK_RUNTIME_LOAD)
#define HK_OBJECT_C_DERIVE_METHOD_DECL_1_CONST(DERIVE, BASE, METHOD, RET_TYPE) \
HK_INLINE RET_TYPE DERIVE##_##METHOD(const DERIVE* obj){ return BASE##_##METHOD((const BASE*)obj); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_1(DERIVE, BASE, METHOD, RET_TYPE) \
HK_INLINE RET_TYPE DERIVE##_##METHOD(DERIVE* obj){ return BASE##_##METHOD((BASE*)obj); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_1_CONST_VOID(DERIVE, BASE, METHOD) \
HK_INLINE void DERIVE##_##METHOD(const DERIVE* obj){ BASE##_##METHOD((const BASE*)obj); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_1_VOID(DERIVE, BASE, METHOD) \
HK_INLINE void DERIVE##_##METHOD(DERIVE* obj){ BASE##_##METHOD((BASE*)obj); }

#define HK_OBJECT_C_DERIVE_METHOD_DECL_2_CONST(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1) \
HK_INLINE RET_TYPE DERIVE##_##METHOD(const DERIVE* obj, ARG_TYPE1 ARG_VAL1){ return BASE##_##METHOD((const BASE*)obj,ARG_VAL1); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_2(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1) \
HK_INLINE RET_TYPE DERIVE##_##METHOD(DERIVE* obj, ARG_TYPE1 ARG_VAL1){ return BASE##_##METHOD((BASE*)obj,ARG_VAL1); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_2_CONST_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1) \
HK_INLINE void DERIVE##_##METHOD(const DERIVE* obj, ARG_TYPE1 ARG_VAL1){ BASE##_##METHOD((const BASE*)obj,ARG_VAL1); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_2_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1) \
HK_INLINE void DERIVE##_##METHOD(DERIVE* obj, ARG_TYPE1 ARG_VAL1){ BASE##_##METHOD((BASE*)obj,ARG_VAL1); }

#define HK_OBJECT_C_DERIVE_METHOD_DECL_3_CONST(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2) \
HK_INLINE RET_TYPE DERIVE##_##METHOD(const DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2){ return BASE##_##METHOD((const BASE*)obj,ARG_VAL1,ARG_VAL2); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_3(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2) \
HK_INLINE RET_TYPE DERIVE##_##METHOD(DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2){ return BASE##_##METHOD((BASE*)obj,ARG_VAL1,ARG_VAL2); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_3_CONST_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2) \
HK_INLINE void DERIVE##_##METHOD(const DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2){  BASE##_##METHOD((const BASE*)obj,ARG_VAL1,ARG_VAL2); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_3_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2) \
HK_INLINE void DERIVE##_##METHOD(DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2){  BASE##_##METHOD((BASE*)obj,ARG_VAL1,ARG_VAL2); }

#define HK_OBJECT_C_DERIVE_METHOD_DECL_4_CONST(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3) \
HK_INLINE RET_TYPE DERIVE##_##METHOD(const DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2, ARG_TYPE3 ARG_VAL3){ return BASE##_##METHOD((const BASE*)obj,ARG_VAL1,ARG_VAL2,ARG_VAL3); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_4(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3) \
HK_INLINE RET_TYPE DERIVE##_##METHOD(DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2, ARG_TYPE3 ARG_VAL3){ return BASE##_##METHOD((BASE*)obj,ARG_VAL1,ARG_VAL2, ARG_VAL3); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_4_CONST_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3) \
HK_INLINE void DERIVE##_##METHOD(const DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2, ARG_TYPE3 ARG_VAL3){ BASE##_##METHOD((const BASE*)obj,ARG_VAL1,ARG_VAL2,ARG_VAL3); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_4_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3) \
HK_INLINE void DERIVE##_##METHOD(DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2, ARG_TYPE3 ARG_VAL3){ BASE##_##METHOD((BASE*)obj,ARG_VAL1,ARG_VAL2, ARG_VAL3); }

#define HK_OBJECT_C_DERIVE_METHOD_DECL_5_CONST(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4) \
HK_INLINE RET_TYPE DERIVE##_##METHOD(const DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2, ARG_TYPE3 ARG_VAL3, ARG_TYPE4 ARG_VAL4){ return BASE##_##METHOD((const BASE*)obj,ARG_VAL1,ARG_VAL2,ARG_VAL3, ARG_VAL4); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_5(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4) \
HK_INLINE RET_TYPE DERIVE##_##METHOD(DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2, ARG_TYPE3 ARG_VAL3, ARG_TYPE4 ARG_VAL4){ return BASE##_##METHOD((BASE*)obj,ARG_VAL1,ARG_VAL2, ARG_VAL3, ARG_VAL4); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_5_CONST_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4) \
HK_INLINE void DERIVE##_##METHOD(const DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2, ARG_TYPE3 ARG_VAL3, ARG_TYPE4 ARG_VAL4){ BASE##_##METHOD((const BASE*)obj,ARG_VAL1,ARG_VAL2,ARG_VAL3, ARG_VAL4); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_5_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4) \
HK_INLINE void DERIVE##_##METHOD(DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2, ARG_TYPE3 ARG_VAL3, ARG_TYPE4 ARG_VAL4){ BASE##_##METHOD((BASE*)obj,ARG_VAL1,ARG_VAL2, ARG_VAL3, ARG_VAL4); }

#define HK_OBJECT_C_DERIVE_METHOD_DECL_6_CONST(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4, ARG_TYPE5, ARG_VAL5) \
HK_INLINE RET_TYPE DERIVE##_##METHOD(const DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2, ARG_TYPE3 ARG_VAL3, ARG_TYPE4 ARG_VAL4, ARG_TYPE5 ARG_VAL5){ return BASE##_##METHOD((const BASE*)obj,ARG_VAL1,ARG_VAL2,ARG_VAL3, ARG_VAL4,ARG_VAL5); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_6(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4, ARG_TYPE5, ARG_VAL5) \
HK_INLINE RET_TYPE DERIVE##_##METHOD(DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2, ARG_TYPE3 ARG_VAL3, ARG_TYPE4 ARG_VAL4, ARG_TYPE5 ARG_VAL5){ return BASE##_##METHOD((BASE*)obj,ARG_VAL1,ARG_VAL2, ARG_VAL3, ARG_VAL4,ARG_VAL5); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_6_CONST_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4, ARG_TYPE5, ARG_VAL5) \
HK_INLINE void DERIVE##_##METHOD(const DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2, ARG_TYPE3 ARG_VAL3, ARG_TYPE4 ARG_VAL4, ARG_TYPE5 ARG_VAL5){ BASE##_##METHOD((const BASE*)obj,ARG_VAL1,ARG_VAL2,ARG_VAL3, ARG_VAL4,ARG_VAL5); }
#define HK_OBJECT_C_DERIVE_METHOD_DECL_6_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4, ARG_TYPE5, ARG_VAL5) \
HK_INLINE void DERIVE##_##METHOD(DERIVE* obj, ARG_TYPE1 ARG_VAL1, ARG_TYPE2 ARG_VAL2, ARG_TYPE3 ARG_VAL3, ARG_TYPE4 ARG_VAL4, ARG_TYPE5 ARG_VAL5){ BASE##_##METHOD((BASE*)obj,ARG_VAL1,ARG_VAL2, ARG_VAL3, ARG_VAL4,ARG_VAL5); }
#else
#define HK_OBJECT_C_DERIVE_METHOD_DECL_1_CONST(DERIVE, BASE, METHOD, RET_TYPE) 
#define HK_OBJECT_C_DERIVE_METHOD_DECL_1(DERIVE, BASE, METHOD, RET_TYPE) 
#define HK_OBJECT_C_DERIVE_METHOD_DECL_1_CONST_VOID(DERIVE, BASE, METHOD) 
#define HK_OBJECT_C_DERIVE_METHOD_DECL_1_VOID(DERIVE, BASE, METHOD) 

#define HK_OBJECT_C_DERIVE_METHOD_DECL_2_CONST(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1)
#define HK_OBJECT_C_DERIVE_METHOD_DECL_2(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1)
#define HK_OBJECT_C_DERIVE_METHOD_DECL_2_CONST_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1) 
#define HK_OBJECT_C_DERIVE_METHOD_DECL_2_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1)

#define HK_OBJECT_C_DERIVE_METHOD_DECL_3_CONST(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2) 
#define HK_OBJECT_C_DERIVE_METHOD_DECL_3(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2) 
#define HK_OBJECT_C_DERIVE_METHOD_DECL_3_CONST_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2) 
#define HK_OBJECT_C_DERIVE_METHOD_DECL_3_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2)

#define HK_OBJECT_C_DERIVE_METHOD_DECL_4_CONST(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3) 
#define HK_OBJECT_C_DERIVE_METHOD_DECL_4(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3)
#define HK_OBJECT_C_DERIVE_METHOD_DECL_4_CONST_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3)
#define HK_OBJECT_C_DERIVE_METHOD_DECL_4_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3) 

#define HK_OBJECT_C_DERIVE_METHOD_DECL_5_CONST(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4)
#define HK_OBJECT_C_DERIVE_METHOD_DECL_5(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4) 
#define HK_OBJECT_C_DERIVE_METHOD_DECL_5_CONST_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4)
#define HK_OBJECT_C_DERIVE_METHOD_DECL_5_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4) 

#define HK_OBJECT_C_DERIVE_METHOD_DECL_6_CONST(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4, ARG_TYPE5, ARG_VAL5) 
#define HK_OBJECT_C_DERIVE_METHOD_DECL_6(DERIVE, BASE, METHOD, RET_TYPE, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4, ARG_TYPE5, ARG_VAL5) 
#define HK_OBJECT_C_DERIVE_METHOD_DECL_6_CONST_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4, ARG_TYPE5, ARG_VAL5)
#define HK_OBJECT_C_DERIVE_METHOD_DECL_6_VOID(DERIVE, BASE, METHOD, ARG_TYPE1, ARG_VAL1, ARG_TYPE2, ARG_VAL2, ARG_TYPE3, ARG_VAL3, ARG_TYPE4, ARG_VAL4, ARG_TYPE5, ARG_VAL5) 
#endif

#define HK_OBJECT_C_DERIVE_METHODS(TYPE) \
HK_OBJECT_C_DERIVE_METHOD_DECL_1(TYPE, HKUnknown,addRef ,HKU32); \
HK_OBJECT_C_DERIVE_METHOD_DECL_1(TYPE, HKUnknown,release,HKU32); \
HK_OBJECT_C_DERIVE_METHOD_DECL_3(TYPE, HKUnknown,queryInterface,HKBool,HKUUID,iid,void**,ppvInterface)

#if defined(HK_DYNAMIC) && !defined(HK_RUNTIME_LOAD)
#define HK_OBJECT_CREATE_TRAITS(TYPE) \
template<> struct HKObjectCreateTraits<TYPE> { static HK_INLINE TYPE* create() { return TYPE##_create(); }};
#else
#define HK_OBJECT_CREATE_TRAITS(TYPE) 
#endif


#endif
